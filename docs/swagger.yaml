openapi: 3.0.0
info:
  title: Turing API
  description: API endpoints for Turing API

version: 0.1.9

servers:
  - url: http://localhost:3003/api
  - url: https://turing-api-endpoints.herokuapp.com/api

components:
  schemas:
    Product:
      type: object
      properties:
        product_id:
          type: number
          example: 1
        name:
          type: string
          example: Chartres Cathedral
        description:
          type: string
          example: "\"The Fur Merchants\". Not all the beautiful stained glass in the great cathedrals depicts saints and angels! Lay aside your furs for the summer and wear this beautiful T-shirt!"
        price:
          type: number
          example: 18.95
        discounted_price:
          type: number
          example: 18.95
        thumbnail:
          type: string
          example: chartres-cathedral-thumbnail.gif
    Products:
      type: array
      items:
        $ref: '#components/schemas/Product'
    Department:
      type: object
      properties:
        department_id:
          type: number
          example: 1
        name:
          type: string
          example: Regional
        description:
          type: string
          example: Proud of your country? Wear a T-shirt with a national symbol stamp!
    Departments:
      type: array
      items:
        $ref: '#components/schemas/Department'
    Category:
      type: object
      properties:
        category_id:
          type: number
          example: 1
        department_id:
          type: number
          example: 3
        name:
          type: string
          example: Regional
        description:
          type: string
          example: It was Churchill who remarked that he thought the Irish most curious because they didn't want to be English. How right he was! But then, he was half-American, wasn't he? If you have an Irish genealogy you will want these T-shirts! If you suddenly turn Irish on St. Patrick's Day, you too will want these T-shirts! Take a look at some of the coolest T-shirts we have!"
    Categories:
      type: array
      items:
        $ref: '#components/schemas/Category'
    Review:
      type: object
      properties:
        review:
          type: string
          example: That is a good product
        created_on:
          type: string
          example: "2019-02-17 13:57:29"
        name:
          type: string
          example: Eder Taveira
        rating:
          type: number
          example: 4
    Reviews:
      type: array
      items:
        $ref: '#components/schemas/Review'
    Attribute:
      type: object
      properties:
        name:
          type: string
          example: Size
        attribute_id:
          type: number
          example: 4
    Attributes:
      type: array
      items:
        $ref: '#components/schemas/Attribute'

paths:
  /products:
    get:
      summary: Retrieve all products
      description: Retrieve all products from api
      tags:
        - Products
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Inform the page. Starting with 1. Default: 1
        - in: query
          name: limit
          schema:
            type: integer
          description: Limit per page, Default: 20.
        - in: query
          name: description_length
          schema:
            type: integer
          description: Limit of the description, Default: 200.
      responses:
        200:
          description: Get All Products
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    example: 40
                  rows:
                    $ref: '#components/schemas/Products'
  /products/{product_id}:
    get:
      summary: Retrieve a single product
      description: Retrieve a product
      tags:
        - Products
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Get All Products
          content:
            application/json:
              schema:
                type: object
                $ref: '#components/schemas/Product'
        404:
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: PROD_02
                  message:
                    type: string
                    example: Product not found
                  field:
                    type: string
                    example: product_id
                  status:
                    type: number
                    example: 404
  /products/{product_id}/locations:
    get:
      summary: Get product location details
      tags:
        - Products
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Product location details
          content:
            application/json:
              schema:
                type: object
                properties:
                  category_id:
                    type: number
                    example: 1
                  category_name:
                    type: string
                    example: French
                  department_id:
                    type: number
                    example: 1
                  department_name:
                    type: string
                    example: Regional
        404:
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: PROD_02
                  message:
                    type: string
                    example: Product not found
                  field:
                    type: string
                    example: product_id
                  status:
                    type: number
                    example: 404
  /products/inCategory/{category_id}:
    get:
      summary: Retrieve all products in a category
      tags:
        - Products
      parameters:
        - in: path
          name: category_id
          required: true
          schema:
            type: integer
        - in: query
          name: page
          schema:
            type: integer
          description: Inform the page. Starting with 1. Default: 1
        - in: query
          name: limit
          schema:
            type: integer
          description: Limit per page, Default: 20.
        - in: query
          name: description_length
          schema:
            type: integer
          description: Limit of the description, Default: 200.
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    example: 40
                  rows:
                    $ref: '#components/schemas/Products'
        404:
          description: Category not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: CAT_02
                  message:
                    type: string
                    example: Category not found
                  field:
                    type: string
                    example: category_id
                  status:
                    type: number
                    example: 404
  /products/inDepartment/{department_id}:
    get:
      summary: Retrieve all products in a category
      tags:
        - Products
      parameters:
        - in: path
          name: department_id
          description: Id of the department
          required: true
          schema:
            type: integer
        - in: query
          name: page
          schema:
            type: integer
          description: Inform the page. Starting with 1. Default: 1
        - in: query
          name: limit
          schema:
            type: integer
          description: Limit per page, Default: 20.
        - in: query
          name: description_length
          schema:
            type: integer
          description: Limit of the description, Default: 200.
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    example: 40
                  rows:
                    $ref: '#components/schemas/Products'
        404:
          description: Department not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: DEP_02
                  message:
                    type: string
                    example: Department not found
                  field:
                    type: string
                    example: department_id
                  status:
                    type: number
                    example: 404
  /products/search:
    get:
      summary: Search products
      tags:
        - Products
      parameters:
        - in: query
          name: query_string
          description: Query to search
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
          description: Inform the page. Starting with 1. Default: 1
        - in: query
          name: limit
          schema:
            type: integer
          description: Limit per page, Default: 20.
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    example: 40
                  rows:
                    $ref: '#components/schemas/Products'
  /products/{product_id}/reviews:
    get:
      summary: Get product reviews
      tags:
        - Products
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: number
            example: 1
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                $ref: '#components/schemas/Reviews'
        404:
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: PROD_02
                  message:
                    type: string
                    example: Product not found
                  field:
                    type: string
                    example: product_id
                  status:
                    type: number
                    example: 404
    post:
      summary: Add product reviews
      tags:
        - Products
      security:
        - {}
        - bearerAuth: []
      parameters:
        - in: path
          name: product_id
          required: true
          schema:
            type: number
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                review:
                  type: string
                  example: This was a good product
                rating:
                  type: number
                  example: 3
      responses:
        201:
          content:
            application/json:
              schema:
                type: object
                $ref: '#components/schemas/Review'
        404:
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: PROD_02
                  message:
                    type: string
                    example: Product not found
                  field:
                    type: string
                    example: product_id
                  status:
                    type: number
                    example: 404

  /departments:
    get:
      summary: Retrieve all departments
      description: Return a list of departments
      tags:
        - Departments
      responses:
        200:
          description: Get All departments
          content:
            application/json:
              schema:
                type: object
                $ref: '#components/schemas/Departments'
  /departments/{department_id}:
    get:
      summary: Get a department
      description: Get a department
      tags:
        - Departments
      parameters:
        - in: path
          name: department_id
          required: true
          schema:
            type: integer
          description: ID of Department
      responses:
        200:
          description: Get a department
          content:
            application/json:
              schema:
                type: object
                $ref: '#components/schemas/Department'
        404:
          description: Department not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: DEP_02
                  message:
                    type: string
                    example: Department not found
                  field:
                    type: string
                    example: department_id
                  status:
                    type: number
                    example: 404
  /categories:
    get:
      summary: Get categories
      description: Return a list of categories
      tags:
        - Category
      parameters:
        - in: path
          name: category_id
          schema:
            type: integer
          description: ID of a category
      responses:
        200:
          description: Get All categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    example: 40
                  rows:
                    $ref: '#components/schemas/Categories'
  /categories/{category_id}:
    get:
      summary: Get a single category
      description: Return a category
      tags:
        - Category
      parameters:
        - in: path
          name: category_id
          required: true
          schema:
            type: integer
          description: ID of a category
      responses:
        200:
          description: Get a categories
          content:
            application/json:
              schema:
                type: object
                $ref: '#components/schemas/Categories'
        404:
          description: Category not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: CAT_02
                  message:
                    type: string
                    example: Category not found
                  field:
                    type: string
                    example: category_id
                  status:
                    type: number
                    example: 404
  /categories/inDepartment/{department_id}:
    get:
      summary: Get categories of a department
      description: Return a list of categories
      tags:
        - Category
      parameters:
        - in: path
          name: department_id
          required: true
          schema:
            type: integer
          description: ID of a department
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    example: 40
                  rows:
                    $ref: '#components/schemas/Categories'
        404:
          description: Department not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: DEP_02
                  message:
                    type: string
                    example: Department not found
                  field:
                    type: string
                    example: department_id
                  status:
                    type: number
                    example: 404

  /attributes:
    get:
      summary: Retrieve all product attributes
      tags:
        - Attributes
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                $ref: '#components/schemas/Attributes'
  /attributes/{attribute_id}:
    get:
      summary: Retrieve a product attribute
      tags:
        - Attributes
      parameters:
        - in: path
          name: attribute_id
          schema:
            type: integer
          required: true
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                $ref: '#components/schemas/Attribute'
  /attributes/values/{attribute_id}:
    get:
      summary: Get values of an attribute
      tags:
        - Attributes
      parameters:
        - in: path
          name: attribute_id
          schema:
            type: integer
          required: true
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  attribute_value_id:
                    type: integer
                    example: 1
                  value:
                    type: string
                    example: S
        404:
          description: attribute not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: PAT_02
                  message:
                    type: string
                    example: attribute not found
                  field:
                    type: string
                    example: attribute_id
                  status:
                    type: number
                    example: 404
  /attributes/inProduct/{product_id}:
    get:
      summary: Get all attributes in a product
      tags:
        - Attributes
      parameters:
        - in: path
          name: product_id
          schema:
            type: integer
          required: true
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  attribute_value_id:
                    type: integer
                    example: 1
                  attribute_value:
                    type: string
                    example: S
                  attribute_value:
                    type: string
                    example: Size
        404:
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: PROD_02
                  message:
                    type: string
                    example: Attribute not found
                  field:
                    type: string
                    example: product_id
                  status:
                    type: number
                    example: 404
